"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const breakerRegex = /[A-Z]+(?=[A-Z][a-z]|$)|[A-Z]|(\d+)|([a-z])/g;
function hyphenate(original, { connector = '-', lowerCase = false } = {}) {
    let precededByNumber = false;
    return original
        .split(/[^a-z\d]+/i)
        .map(part => part &&
        part.replace(breakerRegex, (text, num, lowerChar, index) => {
            if (lowerCase) {
                text = text.toLowerCase();
            }
            if (index) {
                if (precededByNumber) {
                    precededByNumber = !!num;
                    return connector + text;
                }
                precededByNumber = !!num;
                if (lowerChar) {
                    return text;
                }
                else {
                    return connector + text;
                }
            }
            else {
                return text;
            }
        }))
        .filter(part => !!part)
        .join(connector);
}
exports.hyphenate = hyphenate;
exports.default = hyphenate;
//# sourceMappingURL=index.js.map